type Query{
    "Get User info by id"
    user(id: Int!): UserPayload
    "Get User info by username"
    userByUsername(username: String!): UserPayload
    "Get Authorised User info"
    authorisedUser: AuthorisedUserPayload
    "Get Video Content by one of id's"
    videoContentByIdInput(input: VideoContentIdInput): VideoContent
    "Get Trending Video Content."
    trendVideoContent: TrendVideoContentResponse

    """
    Get User's Video Content List by category of content and status of consuming list.

    If a user is authenticated through JWT, this method can be used without providing a userId.
    In this case, the userId will be extracted from the JWT token.
    """
    userVideoContentList(
        userId: Int
        filter: UserVideoContentListFilterInput,
        page: Int = 1
    ): UserVideoContentListConnection
    """
    Get Video Content watch information by User and video content id

    If a user is authenticated through JWT, this method can be used without providing a userId.
    In this case, the userId will be extracted from the JWT token.
    """
    userVideoContent(
        userId: Int
        contentId: Long!
    ): UserVideoContentListElement

    "Make a search query to find Video Content by Category"
    search(query: String!, category: VideoContentCategory!, formats: [VideoContentFormat] = [MOVIE, TV, SPECIAL, MUSIC, UNKNOWN], page: Int = 1): BasicInfoConnection

    "Get random video content from authorised list"
    whatToWatch(
        input: UserVideoContentListFilterInput
    ): BasicInfo
}